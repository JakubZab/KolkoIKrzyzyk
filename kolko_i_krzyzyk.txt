#include <iostream>
using namespace std;

class Kik//Tworzenie klasy Kik (kółko i krzyżyk).
{

private:
	int plansza[3][3];

public:
	void Poczatek();
	void Plansza();
	void Ruch();
	int Gracz, i, j;
	int Zwyciestwo();
	int Rysunek();
};
void Kik::Poczatek()//Ustawia wartosc poczatkowa na planszy na 0
{

	for (i = 0; i < 3; i++)
	{
		for (j = 0; j < 3; j++)
		{
			plansza[i][j] = 0;
		}
	}
}

void Kik::Plansza()//Tworzy plansze na ekranie
{
	for (i = 0; i < 3; i++)
	{
		for (j = 0; j < 3; j++)
		{
			cout << "[ " << plansza[i][j] << " ]";
		}
		cout << endl;
	}
}

void Kik::Ruch()//Wybor gracza
{
	do
	{
		cout << "\nWybierz gracza [1 albo 2] : ";
		cin >> Gracz;
		if (cin.fail())
		{
			cout << "Wprowadź cyfre 1 lub 2!" << endl;
			cin.clear();
			cin.ignore(256, '\n');
		}
	} while (0 >= Gracz > 2); //Sprawdzenie czy gracz uzyl znaku 1 lub 2

	do
	{
		if (Gracz != 1 && Gracz != 2) {
			cout << endl << "Do wyboru jest tylko gracz 1 oraz gracz 2, wybierz jeszcze raz." << endl << endl << endl;
			break;
		}
		do
		{
			cout << "Wprowadz rzad: ";
			cin >> i;
			if (cin.fail())
			{
				cout << "Wprowadź cyfre 0, 1 lub 2!" << endl;
				cin.clear();
				cin.ignore(256, '\n');
				// break nie potrzebne bo nie chcemy wychodzić z pętli
				i = 123; // cokolwiek innego niż 0,1,2, bo po poprzedniej turze zostaje wartość ruchu zapiana w niej. A jeżeli jest fail to z automatu jest 0
			}
		} while (i < 0 || i>2);//Sprawdz czy gracz wprowadzil numer rzedu 0, 1 lub 2.

		do
		{
			cout << "Wprowadz kolumne: ";
			cin >> j;
			if (cin.fail())
			{
				cout << "Wprowadź cyfre 0, 1 lub 2!" << endl;
				cin.clear();
				cin.ignore(256, '\n');
				// break nie potrzebne bo nie chcemy wychodzić z pętli
				i = 123; // cokolwiek innego niż 0,1,2, bo po poprzedniej turze zostaje wartość ruchu zapiana w niej. A jeżeli jest fail to z automatu jest 0
			}
		} while (j < 0 || j>2);//Sprawdz czy gracz wprowadzil numer kolumny 0, 1 lub 2.
		cout << endl;
		plansza[i][j] = Gracz;//Przypisuje na planszy wybrany numer aktualnego gracza do pozycji, ktora wybral.

	} while (plansza[i][j] == 0);

}
int Kik::Zwyciestwo()
{
	//Sprawdz czy gracz 1 wygral.
	if (plansza[0][0] == 1 && plansza[0][1] == 1 && plansza[0][2] == 1) //Poziome zwyciestwo gracza 1
	{
		return 1;
	}
	if (plansza[1][0] == 1 && plansza[1][1] == 1 && plansza[1][2] == 1)
	{
		return 1;
	}
	if (plansza[2][0] == 1 && plansza[2][1] == 1 && plansza[2][2] == 1)
	{
		return 1;
	}
	if (plansza[0][0] == 1 && plansza[1][0] == 1 && plansza[2][0] == 1)//Pionowe zwyciestwo gracza 1
	{
		return 1;
	}
	if (plansza[0][1] == 1 && plansza[1][1] == 1 && plansza[2][1] == 1)
	{
		return 1;
	}
	if (plansza[0][2] == 1 && plansza[1][2] == 1 && plansza[2][2] == 1)
	{
		return 1;
	}
	if (plansza[0][0] == 1 && plansza[1][1] == 1 && plansza[2][2] == 1)//Ukosne zwyciestwo gracza 1
	{
		return 1;
	}
	if (plansza[0][2] == 1 && plansza[1][1] == 1 && plansza[2][0] == 1)
	{
		return 1;
	}

	//Sprawdz czy gracz 2 wygral.
	if (plansza[0][0] == 2 && plansza[0][1] == 2 && plansza[0][2] == 2)//Poziome zwyciestwo gracza 2
	{
		return 1;
	}
	if (plansza[1][0] == 2 && plansza[1][1] == 2 && plansza[1][2] == 2)
	{
		return 1;
	}
	if (plansza[2][0] == 2 && plansza[2][1] == 2 && plansza[2][2] == 2)
	{
		return 1;
	}
	if (plansza[0][0] == 2 && plansza[1][0] == 2 && plansza[2][0] == 2)//Pionowe zwyciestwo gracza 2
	{
		return 1;
	}
	if (plansza[0][1] == 2 && plansza[1][1] == 2 && plansza[2][1] == 2)
	{
		return 1;
	}
	if (plansza[0][2] == 2 && plansza[1][2] == 2 && plansza[2][2] == 2)
	{
		return 1;
	}
	if (plansza[0][0] == 2 && plansza[1][1] == 2 && plansza[2][2] == 2)//Ukosne zwyciestwo gracza 2
	{
		return 1;
	}
	if (plansza[0][2] == 2 && plansza[1][1] == 2 && plansza[2][0] == 2)
	{
		return 1;
	}
	return 0;
}

int Kik::Rysunek()//Jesli na planszy nie pozostaly zadne zera wyswietla sie komunikat o remisie.
{
	for (i = 0; i < 3; i++)
	{
		for (j = 0; j < 3; j++)
		{
			if (plansza[i][j] == 0)
			{
				return 0;
			}
		}
	}
	return 1;
}
int main()
{
	Kik* Game = new Kik;

	cout << "WSKAZOWKI!!\n";
	cout << "Rozmieszczenie pol w grze wyglada nastepujaco:\n";
	cout << "(0, 0) (0, 1) (0, 2)\n";
	cout << "(1, 0) (1, 1) (1, 2)\n";
	cout << "(2, 0) (2, 1) (2, 2)\n";
	cout << "Do wybrania rzedu i kolumny wybierz numer 0, 1 lub 2!\n";

	Game->Poczatek();//Tworzy planszę 3x3 i uzupelnia pola zerami.

	do
	{
		Game->Ruch();
		Game->Plansza();
		Game->Zwyciestwo();
		Game->Rysunek();
	} while (Game->Zwyciestwo() != 1 && Game->Rysunek() != 1);

	if (Game->Rysunek() == 1)
	{
		cout << "\nREMIS!!! Dziekujemy za gre!\n\n";
	}
	if (Game->Zwyciestwo() == 1)
	{
		cout << "\nGraczu " << Game->Gracz << " wygrales, GRATULACJE!!!\n\n";
	}

	system("pause");
	delete(Game);
}